# ------------------------------------------------------------------------------------------------------------------------
# Reusable Workflow: Deploying a Container App from a Registry
# See https://learn.microsoft.com/en-us/azure/ai-studio/how-to/create-projects?tabs=azurecli
# ------------------------------------------------------------------------------------------------------------------------
name: z_template_deploy_ai_hub_project
run-name: Deploy AI Hub Project
on:
  workflow_call:
    inputs:
      ENV_CODE:
        required: true
        type: string
      RESOURCE_GROUP:
        required: true
        type: string
      templatePath:
        required: false
        type: string
        default: 'infra/bicep/'
      templateFile:
        required: false
        type: string
        default: 'main.bicep'
      parameterFile:
        required: false
        type: string
        default: ''
      parameterFileReplaceTokens:
        required: false
        type: string
        default: 'false'
      PROJECT_NAME:
        required: true
        type: string

# ------------------------------------------------------------------------------------------------------------------------
jobs:
  deploy:
    name: Deploy Project ${{ inputs.ENV_CODE }} ${{ inputs.PROJECT_NAME }}
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.ENV_CODE }}
    env:
      envCode: ${{ inputs.envCode }}
    steps:
      - name: Checkout Code
        if: ${{ inputs.runCreateInfra }}
        uses: actions/checkout@v4

      - name: Get the current date
        id: get-date
        run: echo "DATE_TIME_STAMP=$(date +'%Y%m%d%H%M')" >> $GITHUB_OUTPUT

      - name: Display Variables and Files
        run: |-
          echo "inputs.envCode=${{ inputs.envCode }}"
          echo "inputs.RESOURCE_GROUP=${{ inputs.RESOURCE_GROUP }}"
          echo "vars.APP_NAME=${{ vars.APP_NAME }}"
          echo "templatePath=${{ inputs.templatePath }}"
          echo "templateFile=${{ inputs.templateFile }}"
          echo "templateFilePath=${{ inputs.templatePath }}${{ inputs.templateFile }}"
          echo "parameterFile=${{ inputs.parameterFile }}"
          echo "parameterFilePath=$${{ inputs.templatePath }}${{ inputs.parameterFile }}"
          echo "parameterFileReplaceTokens=${{ inputs.parameterFileReplaceTokens }}"
          echo "---------------------------------"
          echo "##[group]All Variables:"
          echo "Environment:"
          echo '${{ toJSON(env) }}'
          echo "Variables:"
          echo '${{ toJSON(vars) }}'
          echo "Secrets:"
          echo '${{ toJSON(secrets) }}'
          echo "Inputs:"
          echo '${{ toJSON(inputs) }}'
          echo "##[endgroup]"
          echo "---------------------------------"
          echo "##[group]Directory of ${{ github.workspace  }}"
          tree -R ${{ github.workspace  }}
          echo "##[endgroup]"
        continue-on-error: true

      - name: Replace Tokens
        if: ${{ inputs.runCreateInfra && inputs.parameterFileReplaceTokens == 'true' }}
        uses: qetza/replacetokens-action@v1
        with:
          sources: '${{ inputs.templatePath }}${{ inputs.parameterFile }}; !local/ => ${{ inputs.parameterFile }}'
          variables: '[${{ toJSON(env) }},${{ toJSON(vars) }},${{ toJSON(secrets) }}]' # use environment & variables & secrets

      - name: Display Param File
        run: |-
          echo "##[group]Contents of ${{ inputs.templatePath }}${{ inputs.parameterFile }}"
          cat ${{ inputs.templatePath }}${{ inputs.parameterFile }}
          echo "##[endgroup]"
        continue-on-error: true
      - name: OIDC Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.CICD_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # I need the actual Resource ID of the hub, and I can't seem to get it to pass through output variables... :(
      # so - I'll call the bicep to locate the existing resource, then output the ID, then use that in my command...
      - name: Find Azure Resources
        uses: azure/arm-deploy@v2
        id: run-bicep
        with:
          scope: resourcegroup
          region: ${{ vars.RESOURCEGROUP_LOCATION }}
          resourceGroupName: ${{ inputs.RESOURCE_GROUP }}
          deploymentName: ${{ inputs.templateFile }}-find-${{ steps.get-date.outputs.DATE_TIME_STAMP}}
          template: ${{ inputs.templatePath }}${{ inputs.templateFile }}
          parameters: ${{ inputs.templatePath }}${{ inputs.parameterFile }}
          deploymentMode: Incremental

      - name: Display Output
        run: |-
          echo "AI_HUB_ID=${{ steps.run-bicep.outputs.AI_HUB_ID }}"
          echo "AI_HUB_NAME=${{ steps.run-bicep.outputs.AI_HUB_NAME }}"

          echo "---------------------------------"
          echo "##[group]All Variables:"
          echo "Environment:"
          echo '${{ toJSON(env) }}'
          echo "Variables:"
          echo '${{ toJSON(vars) }}'
          echo "Secrets:"
          echo '${{ toJSON(secrets) }}'
          echo "Inputs:"
          echo '${{ toJSON(inputs) }}'
          echo "##[endgroup]"
        continue-on-error: true

      - name: OIDC Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.CICD_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy AI Foundry Project
        run: |
          az config set extension.dynamic_install_allow_preview=true          
          echo "az ml workspace create --kind project --resource-group ${{ inputs.RESOURCE_GROUP }} --hub-id ${{ inputs.HUB_ID }} --name ${{ inputs.PROJECT_NAME }}"
          az ml workspace create \
            --kind project \
            --resource-group ${{ inputs.RESOURCE_GROUP }} \
            --hub-id ${{ steps.run-bicep.outputs.AI_HUB_ID }} \
            --name ${{ inputs.PROJECT_NAME }}
