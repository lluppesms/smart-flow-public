# ------------------------------------------------------------------------------------------------------------------------
# Action: Build and deploy all container app modules
# ----------------------------------------------------------------------------------------------------
# Note: in order to do multiple CA build/deploys, you need to change FW and login ONCE, otherwise
# it tends to have token refresh issues and fail on the second and third app
# ------------------------------------------------------------------------------------------------------------------------
name: 1 - Test
run-name: 1 - Test to ENV ${{ inputs.deployEnvironment }} by @${{ github.actor }}
on:
  # push:
  #   branches:
  #     - main
  #   paths:
  #     - app/**
  workflow_dispatch:
    inputs:
      deployEnvironment:
        description: 'Environment'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - qa
          - prod
          - lyle
          - scott
          - piotr
          - chris
          - nick
          - matt
      parameterFile:
        description: 'Parameter File'
        required: true
        default: 'main.gh.bicepparam'
      createResourceGroup:
        description: Create Resource Group?
        type: boolean
        default: true
      publicAccessEnabled:
        description: Public Access Enabled?
        type: boolean
        default: true
      createDnsZones:
        description: Create DNS Zones?
        type: boolean
        default: true
      addRoleAssignments:
        description: Add Role Assignments?
        type: boolean
        default: true
      deployAIHub:
        description: Deploy AI Hub?
        type: boolean
        default: true
      runBuildDeployAPI:
        description: 'Build and Deploy API'
        required: false
        default: true
        type: boolean
      runBuildDeployBatch:
        description: 'Build and Deploy Batch'
        required: false
        default: false
        type: boolean
      runSecurityScan:
        description: 'Run Security Scan'
        required: false
        default: false
        type: boolean
      # runSmokeTest:
      #   description: 'Run Smoke Tests'
      #   required: false
      #   default: false
      #   type: boolean

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout

# ------------------------------------------------------------------------------------------------------------------------
env:
  # these are defined by the project itself, so they can stay here...
  ACR_REPO_NAME: 'aiflows'

  API_APP_PATH: 'app/Assistant.Hub.Api'
  API_ACR_APP_NAME: 'assistantapi'
  API_PORT: '8080'

  BATCH_APP_PATH: 'app/Assistant.Hub.Api.Batch'
  BATCH_ACR_APP_NAME: 'assistantbatch'
  BATCH_PORT: '8080'
  # activation is getting an error: The TargetPort 80 does not match the listening port 39581. The TargetPort 80 does not match any of the listening ports: [39581 4001 4001].

# ------------------------------------------------------------------------------------------------------------------------
jobs:
  template-env:
    # You can't pass environment variables to templates, so put them in outputs here that you CAN pass
    name: Template Env Variables
    runs-on: ubuntu-latest
    environment: ${{ inputs.deployEnvironment }}
    outputs:
      PROJECT_ROOT: ${{ github.workspace }}
      ENV_CODE: ${{ inputs.deployEnvironment }}
      APP_NAME: ${{ vars.APP_NAME }}
      APP_NAME_NO_DASHES: ${{ steps.set-env.outputs.SANITIZED_APP_NAME }}
      RESOURCE_GROUP_NAME: '${{ vars.RESOURCEGROUP_PREFIX }}-${{ inputs.deployEnvironment }}'

      APP2_NAME: ${{ vars.APP2_NAME }}
      APP2_NAME_NO_DASHES: ${{ steps.set-env.outputs.SANITIZED_APP2_NAME }}

      ACR_NAME: '${{ vars.APP_NAME_NO_DASHES }}cr${{ inputs.deployEnvironment }}'
      ACR_REPO_NAME: ${{ env.ACR_REPO_NAME }}
      CONTAINER_APP_ENV_NAME: '${{ vars.APP_NAME_NO_DASHES }}-cae-${{ inputs.deployEnvironment }}'

      API_CONTAINER_APP_NAME: '${{ vars.APP_NAME_NO_DASHES }}-ca-api-${{ inputs.deployEnvironment }}'
      API_APP_PATH: ${{ env.API_APP_PATH }}
      API_ACR_APP_NAME: ${{ env.API_ACR_APP_NAME }}
      API_PORT: ${{ env.API_PORT }}

      BATCH_CONTAINER_APP_NAME: '${{ vars.APP_NAME_NO_DASHES }}-ca-batch-${{ inputs.deployEnvironment }}'
      BATCH_APP_PATH: ${{ env.BATCH_APP_PATH }}
      BATCH_ACR_APP_NAME: ${{ env.BATCH_ACR_APP_NAME }}
      BATCH_PORT: ${{ env.BATCH_PORT }}
      
    steps:
      - name: Set common environment variables
        id: set-env
        run: |
          echo "PROJECT_ROOT: ${{ github.workspace }}"
          echo "inputs.ENV_CODE: ${{ inputs.deployEnvironment }}"
          echo "vars.APP_NAME: ${{ vars.APP_NAME }}"

          APP2_NAME="rg_test-dev"
          echo "APP2_NAME=$APP2_NAME" >> $GITHUB_OUTPUT
          SANITIZED_APP2_NAME="$(echo $APP2_NAME | tr -d '-' | tr -d '_')"
          echo "SANITIZED_APP2_NAME=$SANITIZED_APP2_NAME" >> $GITHUB_OUTPUT

          SANITIZED_APP_NAME="$(echo ${{ vars.APP_NAME }} | tr -d '-' | tr -d '_')"
          echo "SANITIZED_APP_NAME=$SANITIZED_APP_NAME"
          echo "SANITIZED_APP_NAME=$SANITIZED_APP_NAME" >> $GITHUB_OUTPUT

  deploy:
    name: Test 2
    runs-on: ubuntu-latest
    needs:
      - template-env
    environment: ${{ inputs.deployEnvironment }}
    steps:
      - name: Display Variables
        run: |-
          echo "inputs.envCode=${{ inputs.deployEnvironment }}"
          echo "APP_NAME: ${{ needs.template-env.outputs.APP_NAME }}"
          echo "APP_NAME_NO_DASHES: ${{ needs.template-env.outputs.APP_NAME_NO_DASHES }}"

          echo "APP2_NAME: ${{ needs.template-env.outputs.APP2_NAME }}"
          echo "APP2_NAME_NO_DASHES: ${{ needs.template-env.outputs.APP2_NAME_NO_DASHES }}"

          echo "Environment:"
          echo '${{ toJSON(env) }}'
          echo "Variables:"
          echo '${{ toJSON(vars) }}'
          echo "Secrets:"
          echo '${{ toJSON(secrets) }}'
          echo "Inputs:"
          echo '${{ toJSON(inputs) }}'
        continue-on-error: true

